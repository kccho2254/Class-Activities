* {
  box-sizing: border-box;
}

body {
  font-family: Arial;
  margin: 0;
}

header {
  padding: 40px;
  text-align: center;
  background: #13293d;
  color: #fff;
}

/* 
What happens when we set the display property to flex? 
display flex makes the container a flexible object, meaning it will activate other flex properties
*/
nav {
  display: flex;
  background-color: #d8a47f;
}

nav a {
  color: #13293d;
  padding: 14px 20px;
  text-decoration: none;
  text-align: center;
}

/* 
What is the flex-wrap property? 
flex-wrap prevents the containers from shrinking when they overflow the webpage width, and add them onto the next row instead
*/
main {
  display: flex;
  flex-wrap: wrap;
}

aside {
  flex: 1;
  background-color: #b9c6ae;
  padding: 80px;
  text-align: center;
}

/* 
What does the flex-shrink property specify?
What is doing here? 
flex-shrink specifies how much smaller the object will be relative to the other flexible items of the same parent
flex-shrink 0 means the footer will shrink relative to other objects of the same container at the same rate,
but it is the only aspect in it's container so there is no visible change
*/
footer {
  display: flex;
  flex-shrink: 0;
  padding: 20px;
  text-align: center;
  background: #13293d;
  color: #fff;
}

/* 
What does the justify-content property do? 
justify-content sets the rule for horizontal positionality, though this is vertical if a reverse is used in, for example, flex-flow
*/
.products {
  flex: 4;
  background-color: #fff;
  padding: 20px;
  display: flex;
  flex-wrap: wrap;
  justify-content: center;
}

/* 
What is the flex property a shorthand property for?
What is it doing here? 
flex is shorthand for flex-grow, flex-shrink, and flex-basis. it sets the initial length for cards so long as they have flex properties
*/
.card {
  border-style: solid;
  border-width: 1px;
  border-radius: 10px;
  padding: 10px;
  flex: 0 0 400px;
}

.card header {
  padding: 20px;
}

.card p {
  text-align: center;
}

.card img {
  width: 100%;
}

/* 
What does the flex-direction property define?
What is it doing here? 
flex-direction column sets main and nav tags to stack on top of each other vertically when max-width falls under 768px
*/
@media screen and (max-width: 768px) {
  main,
  nav {
    flex-direction: column;
  }
}
